/* ******************************************************** 
** Copyright (c) 2000-2001, Thomas Maxwell White, all rights reserved. 
** $Header$
******************************************************** */ 

Triceps Progress Log

<<changes from version 2.10a to 2.20a
<<9/9/00

Evidence.java
	removed local writeReserved()
	  - call schedule.writeReserved() instead
	re-ordered dataLogging 
	  - WAS null, localName, answerLangNum, questionAsAsked, ans, comment, timeStamp
	  - NOW null, localName, answerLangNum, timeStamp, questionAsAsked, URLencoded(ans), URLencoded(comment)
  
Node.java
  added attEncode() method for encoding the value='' attribute of various HTML elements
    - converts a String to HTML4 encoding 
      - chars encoded: ISOcontrol, &, <, >, ', "
      - encoding format: &#xxx;
      - rest of characters are sent as-is
      - FIXME - this may not extend to Unicode
    - ignores embedded entities (since reflects direct data input - human wouldn't enter '&nbsp;')
  attEncode() called for the following
    <input type='text'>
    <input type='password'>
    <textarea>
    <input type='hidden' name='COMMENT'>
  changed timeStamp format
    - used to use yyyy.mm.dd..hh.mm.ss
    - now uses milliseconds since 1970.01.01.00.00.00.000
  
Schedule.java
  added DISPLAY_COUNT
    - lets loggers know how many screens the user has seen
  changed timeStamp format
    - TITLE_FOR_PICKLIST_WHEN_IN_PROGRESS uses Date(), rather than milliseconds, since more easily interprettable
  re-ordered dataLogging for Nodes
    - WAS null, localName, answerLangNum, questionAsAsked, ans, comment, timeStamp
    - NOW null, localName, answerLangNum, timeStamp, questionAsAsked, URLencoded(ans), URLencoded(comment)
  re-ordered dataLogging for Reserved
    - WAS RESERVED, name, value, , , timeStamp
    - NOW RESERVED, name, value, timeStamp, , , ,

Triceps.java
  added tracking of DISPLAY_COUNT
  added tracking of timeSent and timeReceived
  added start message to eventLogger
  changed timeStamp format for START_TIME from yyyy.mm..hh.mm.ss to milliseconds
  changed eventLogging source (from HTTP)
    - line separator changed from pipe to tab
    - intra-line token separator changed kept as comma
  changed eventLogging storage to file
    - each line terminated with \n
    - 6 columns of data collected
      localName, inputType, eventType, timeStamp, (timeStamp-screenStartTime), eventData, varValue
    - varValue may contain commas, so extra tokens past #6 merged into a single one
    - commas converted to tabs in eventLogger file
    - columns 5 & 6 are URLencoded() in eventLogger file
    - 7 columns are written - the displayCount is prepended to the other 6
  added sent_request and received_response events to eventLogging
    - sent_request logs timeStamp and (sent_request - received_response)
      - tracks internal processingTime
    - received_response logs timeStamp and (received_response - sent_request)
      - tracks total transitTime for a given screen display
    - once local and remote times are synchronized, average network delay can be calculated
      - outbound = (loadTime - sentTime)
      - inbound = (receivedTime - submitTime)
      - responseTime = (inbound + outbound) = perceived wait time

TricepsServlet.java
  added logging of sent_request and received_response
    - when should sent_request be registered? - ideally before any screen loading occurs
  comments are now attEncoded()
  changed eventLogging
    - no longer tracks varValue for each keystroke since becomes huge
    - such tracking unnecessary, since focus, blur, and change all show varValue
    - separator char now tab instead of pipe
    
XMLString.java
  bugfixes
    - backslash in an <input> generated a prematurely terminated warning
    - entity parsing did not detect &#xxx; format correctly
    - entity parsing searched too deeply - now limited to 10 characters
  TESTING
    - attEncode() ensures that any value can be passed to <input type='xxx' value=''> 
    - tested with all ASCII characters to ensure that values collected and preserved
    - no buffer overflow detected with up to 25,000 characters
    - XXX - should test 32k and 64k inputs to see whether gracefully handled
    - Excel makes mistakes when importing TSV files with these column widths
      - ignores subsequent columns - required re-ordering timeStamp
      - does not generated any error messages
    - Netscape can only handle ~30k of input
    - saving to Jar file causing trouble with data dataLogger and eventLogger


<<changes from version 2.20a to 2.30a
<<9/10/00

Logger.java
  changed meaning of discard - if (!discard), then StringBuffer accumulates data too
  write() explicitly re-opens file if it has been closed
  bugfix - close and delete set variables to null for close detection
  
Triceps.java
  dataLogger and eventLogger don't buffer contents (discard = true) - prevents overflows
  changed Jar file writing 
    - use InputStream and OutputStream to work with bytes, not chars
    - modularized writing of Jar entries
    - copyFile instead of simultaneous writes
    - [Note that JarOutputStream is finicky - using finish() or closeEntry() causes errors in writing Jar file]
  TESTING
    - 16K and 25K data in comment and/or value fields are supported without error
    
<<changes from version 2.30a to 2.40a
<<9/10/00

JarFile.java
  implements methods originally in Triceps
    - getInstance(jarFilename)
    - addEntry(name,InputStream)
    - addEntry(name,File)
    - close()
    - copyFile(src,dst)
    
Triceps.java
  removed methods now in JarFile
  
Datum.java
  renamed reserved words *N/A* to *NA*, and *HUH?* to *HUH*
  
Logger.java
  added getInputStream() method - closes existing file, returns FileInputStream for it


<<changes from version 2.40a to 2.50
<<10/05/00

Schedule.java
  added saveAsJar()
    - writes the scheduleSource's headers and body vectors to a (SCHEDULE_SOURCE).jar
    
TricepsServlet.java
  added sign_schedule
    - if (AUTHORABLE), calls saveAsJar()
    
dat2sas.pl
  updated to reflect new data file format
  now takes command line arguments for uniqueID, modulePattern, and discardPattern
  values = '.' for each of these patterns avoids them being used
  non-modularized, non-discarded variables stored in __MAIN__.sas
  BUG? - if SAS is really limited to 500 columns, this script doesn't check for overflow
  BUG? - values stored as URLencoded - a problem? - ensures that tabs and new-lines properly handled on input into SAS
  
server.xml
  changed default ports from 8080 -> 8297 and from 8007 -> 8305 (Ajp12Connector)
  [this will avoid simple Robots]
  
Look & Feel
  New index.htm page for all studies, using trilogo.jpg created by Kathy Gordon
  This page links to individual studies
  All data saved in /triceps/dist/tomcat/webapps/STUDY/Web-Inf/{working|completed} directories
  Available schedules found in /triceps/dist/tomcat/webapps/STUDY/Web-Inf/schedules directories
  
<<changes from version 2.60 to 2.70
<<10/10/2000

Licensing
  BYSLicenseIF and CICLicenseIF explicitly compiled into code
  License message appears on splash screen
  Link from splash screen to appropriate license file
  
Authentication
  Deployable can now only use signed Jar files
    quite small and fast
  Code changes to ScheduleSource.java to support this
  Added /make/keysign.bat to facilitate signing
    
Administration
  STUDY_ALIAS (e.g. BYS, CIC, Demos), now used internally
  changed index.html files and directory names to reflect new schema
  changed web.xml files to reflect this
  
Encryption & Non-repudiation
  Too difficult for Triceps, and given state of export restrictions.
  Encourage investigators to send Jar datafiles (currently unsigned) via SSL-mail
  
 
<<changes from version 2.7.0 to 2.7.1
BUGFIX
-problem: workingDir, completedDir and floppyDir were being read from datafile, not master web.xml
-fix: overload the master values once the schedule was fully loaded

TEST
-semi-completed Adult and Youth BYS study files saved, restored, and re-saved, and compared (TkDiff)
-no errorrs detected

<<changes from version 2.7.1 to 2.7.5

Reorganization & Documentation
  XMLAttrEncoder 
    - to prevent premature termination of XML attributes by filtering their contents through an XML Entity encoder
    - replaces Node.EMPTY_NODE.attrEncode()
  InputEncoder 
    - to prevent bad input characters from corrupting the system, and to ensure that no whitespace would hinder tab delimited format
    - replaces URLEncoder()
  InputDecoder 
    - to decode InputEncoded data
    - replaces URLDecoder()
  ExcelDecoder 
    - to convert from Excel encoded strings to consistent Java String format
    - replaces Node.EMPTY_NODE.fixExcelisms()

ToDo
	Reverse tree creation of Nodes
	Undo capability of eval nodes
	Headermsg choices
	Loading sub-schedules
	Cocoon integration
	XML data passing between GLU and Cocoon for presentation
	XML data model (?) of internal structures (or argument for reasons why not)
	
<< changes from version 2.7.5 to 2.7.6
Reorganization & Documentation
  TricepsEngine
    - now contains meat of what was TricepsServlet code
  TricepsServlet
    - now only contains Servlet wrapper classes to maintain TricepsEngine sessions	
	
<< changes from version 2.7.6 to 2.7.7
  TricepsServlet
    - session ID explictly used to avoid overlap
    - now logs all GET and POST events to Logger
  TricepsEngine
    - comments allowed for nothing nodes, but Refused excluded
    - fixed final screen (so only shows Thank You message)
    - schedule load error - now gives error on splashscreen, not "you are already at end"

<< changes from version 2.7.7 to 2.7.8
  TricepsServlet
    - now only logs GET and POST when in state WEB_SERVER
      - otherwise, the reverseDNS lookup adds and extra 6 seconds to each screen on non-networked Windows computers
  ALLOW_JUMP_TO
    - when true, lets jump-to button be visible and active
    - should only be used in reviewer mode
    
<< changes from version 2.7.8 to 2.8.0
  XMLString
    now XHTMLizes unary tags:  <br> becomes <br />
  XML
    added toXML() functions to represent entire contents of questions, answer options, and metadata passed via HTTP

<< changes from version 2.8.0 to 2.8.1
  TricepsServlet
    - Checks client browser.  If not Netscape 4.xx, returns error page
    - Streamlined access logging
  TricepsEngine
    - Beginnings of Javascript compatibility with MSIE
  InputEncoder
    - now simply replace whitespace with ' ' instead of URLencoding
  InputDecoder
    - now simply return string, rathern then URLdecoding
  Copyright
    - added explicit copyright message to each file
    
<< changes from version 2.8.1 to 2.8.2
  qss.jj
    Re-synched with Qss.java so that Qss.java can be re-generated (minus the copyright and package name) from qss.jj
  XMLString
    numeric entities can now have integer digits.
  Netscape6
    tested - does not work with Triceps, does not throw any useful messages.  Seems to re-call GET after POST, clearing any progress
    affected files:  TricepsServlet.java
  Cocoon
    affected files:  AnswerChoice.java, Node.java, TricepsEngine

<< changes from version 2.8.2 to 2.8.3
  Internet Explorer 5.x
    now works - had to explicitly put all onXXX event commands in <input>s, rather than dynamically building them
    affected files:  Node.java, TricepsEngine.java, TricepsServlet.java
  Opera
    tested - still doesn't work - generates error messages like e.* is not an object - seems to be a JavaScript event model problem.
  Logging
    added IP_ADDRESS and BROWSER_TYPE to .dat and .evt logs.
    this allows detection of change in source location and event storage format
    affected files:  Schedule.java, Triceps.java, TricepsEngine.java

<< changes from version 2.8.3 to 2.8.4
  Added ability to suspend to floppy, error messages when fails to save, and jump_to_first_unasked
  update_dat.pl now translates among all three Triceps file formats

<< changes from version 2.8.4 to 2.8.5
  Evidence:  added navigation functions, mean(), and stddev()
  JarWriter:  fail if src has 0 size, of if dst is larger than src
  Node:  move "please answer this question" above answer options, instead of below
  Schedule:  added option to add redirect page to end of interview
    allow swapping of next and previous buttons
    added ANSWER_OPTION_FIELD_WIDTH feature
    added check to make sure that signed/saved file is > 0 size
  Triceps:  once data loggers are deleted, don't resave the file - else can overwrite existing data!
  TricepsEngine:  changed javascript so that button >> cursors appear to right of next and left of previous
    fixed layout - now only shows Comment/Refused column when needed
    now only show question num column when needed
    added option to add redirect page to end of interview
    allow swapping of next and previous buttons
    removed requirement for Cookies
    only delete workingdir files if saves to completed and floppy correctly
  TricepsServlet:  change logging to show schedule & line # at each step ; and to log even when not in WEB_SERVER mode
    show sessionID on log line

<< changes from 2.8.5 to 2.8.6
  Multi-line <options>:  better AnswerChoice.subdivideMessage(); Node uses it; TricepsEngine uses it
  Data save integrity checks:  ensures that .jar file has data files, and that same size as source
  Suspend_to_floppy:  now sends to /suspended directory, so that don't confuse partially with fully completed interviews.
  RESTORE_FROM_FLOPPY: copies from /suspended directory, unless larger file exists there
  Jarred working files: ScheduleList unzips them (unless a larger, presumably more recent file exists in same place), then deletes jar
  
<< changes from 2.8.6 to 2.8.7
  Triceps bundles - changed wording for suspend/restore from floppy
  BUGFIX - questionReference # missing when icons present
  Enhancement - multi-line restore option now indicates whether it is a working file, or one restored from floppy (by file name only) 

<< changes from 2.8.7 to 2.8.8
  BUGFIX - Web.xml session timeout was 30 min - changed to 600
  BUGFIX - Reload questions was resetting everyting to UNASKED
  BUGFIX - Expired sessions generated messages like "already at beginning" or "already at end" - now generate proper info page

<< changes from 2.8.8 to 2.8.9
  BUGFIX - 'e' lines that include assign statments now have those new values saved to the data file
  Enhancement - added "suspendToFloppy()" function
  Enhancement - better expired session handling - shows link closing window and opening up new session

<< changes from 2.8.9 to 2.8.9a
  BUGFIX - now does ignoreCase() test for file extensions
  
<< changes from 2.8.9a to 2.9.0
  BUGFIX - 'e' lines weren't saving properly to log file -- had no language #, which caused failure to reload
  BUGFIX - combo boxes not displaying proper selected value (but list boxes are!)
  Enhancement - adding Triceps.log.err to jar files - can be copious when restoring from suspended, but zips well
  Enhancement - show name of file that can't be restored (in case of error restoring)
  BUGFIX - getAnsOption() from Evidence not parsing message or value
  WARNING! - conditional assignment stores all values! should not evaluate non-visited options?  OR, warn of behavior!
  BUGFIX - fixed session timeout problem introduced in Tomcat 3.2.1
  Enhancement - upgraded to Tomcat 3.2.3
  
  TODO
    Warn about undoing static changes - not properly supported
    Warn about conditional assignment side effects
    Warn about && / || conditional assignment side effects
    refactor
    check for Uencode on restoring interviews
    check for version incompatabilities when restoring
    add support for regular expressions

<< changes from 2.9.0 to 2.9.1
  Enhancement - Added Perl5 regex to Node "mask" column, and regexMatch() function using InputValidator.java and Jakarta-ORO project

<< changees from 2.9.1 to 2.9.2
  Name change -- everything Triceps changed to Dialogix
  Enhancement - Preliminary support for saving data mid-stream to files; and template for executing calls to process that data
  Enhancement - Optionally disable ability to view Working directory
