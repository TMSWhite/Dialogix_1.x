<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>

<HEAD>
	
	<META NAME="VPSiteProject" CONTENT="file:///C|/cvs/Triceps/TricepsHTML.vpp"><META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
	<META NAME="GENERATOR" Content="Visual Page 2.0 for Windows">
	<TITLE>Triceps Requirements Analysis</TITLE>
</HEAD>

<BODY>

<P ALIGN="CENTER"><B>Triceps Requirements Analysis</B></P>
<P><B>Mission</B></P>

<UL>
	<LI>Design and implement a tool for authoring and implementing arbitrary questionnaires, surveys, structured interviews,
	guidelines, and directed education which can be targetted to any platform, and which uses a portable knowledge
	representation.
	<LI>Design a multi-layered architecture that maximally facilitates distributed development and reuse
</UL>

<P><B>Wish List</B>

<UL>
	<LI>Data Access &amp; Storage
	<UL>
		<LI>single access to resultset that can connect to distributed, load-balanced databases
		<LI>support connections to object and/or relational databases
		<LI>support a variety of languages (e.g. SQL, QBE) to query those databases
		<LI>syntax to automatically build normalized database (e.g. dot notation within concept heirarchy)
	</UL>
	<LI>Business Logic
	<UL>
		<LI>conditional branching
		<UL>
			<LI>Is Triceps' linear model sufficiently generalizable? (once looping addressed)
			<LI>Need tree model (at least) to conditionally execute a collection of children
			<LI>Other ways of modeling syntax for directed acyclic graphs?
		</UL>
		<LI>looping
		<UL>
			<LI>e.g. one-to-many relationships (foreach patient, ask ...)
		</UL>
		<LI>support arbitrary scripting language to manipulate result sets?
		<LI>How complex does the business logic syntax need to be?
		<UL>
			<LI>Is there need for complex looping structures, as in Perl?
			<LI>Matrix math?
			<LI>Can complexities be encapsulated into pipelined modules?
		</UL>
	</UL>
	<LI>Dynamic Content
	<UL>
		<LI>Tailor presentation based upon previous answers
		<UL>
			<LI>instructions, questions
			<LI>answers &amp; summary descriptions? (e.g. culture specific?)
			<LI>help (e.g. educational level, learning-style-preferences, multi-media)
		</UL>
		<LI>Only show (or activate) applicable questions
	</UL>
	<LI>Presentation (output)
	<UL>
		<LI>Visual
		<UL>
			<LI>Multi-platform
			<UL>
				<LI>HTML, PDF, WAP
			</UL>
			<LI>high level layout commands (e.g. layoutPalm() ~= &quot;make this fit nicely on a Palm screen&quot;)
			<LI>Turbine model of page generation (modularity of page, layout, navigation, screen)?
			<LI>Cocoon/Enhydra model of XML-tag references to business logic?
		</UL>
		<LI>Audio
		<UL>
			<LI>text to speech
			<LI>JSAPI?
		</UL>
	</UL>
	<LI>Input
	<UL>
		<LI>Kinesthetic
		<UL>
			<LI>Keyboard, mouse
		</UL>
		<LI>Verbal
		<UL>
			<LI>JSAPI for auto-creation of speech grammars
		</UL>
		<LI>Validation
		<UL>
			<LI>input masks (date, time, SSN, other)
			<LI>date-type &amp; allowable range
			<LI>XML-Schema or RDF to specify valid data types and ranges?
			<LI>required vs. non-required fields (boolean sufficient?)
		</UL>
	</UL>
	<LI>Internationalization
	<UL>
		<LI>translate instructions, help, questions, answers, etc.
		<LI>culture/religion/etc. specific questions
		<LI>dynamic switching between languages; loading of speech engines
	</UL>
	<LI>Accessibility
	<UL>
		<LI>Visually impaired - large text; speech
		<LI>Hearing impaired - volume, pitch, visual alerts (flashing)
		<LI>Motorically impaired - speech recognition, alternative input devices
		<LI><A HREF="http://www.w3.org/TR/1999/WAI-WEBCONTENT-19990505/">W3C accessibility guidelines</A>?
		<LI>Optimizations for expert users?
	</UL>
	<LI>Help
	<UL>
		<LI>context specific
		<LI>presentation logic to tailor to education level, accessibility, etc.
	</UL>
	<LI>Dynamic re-arrangement of questionnaire content (randomization), where allowable
	<UL>
		<LI>Parallel vs. serial sections
		<LI>Parsing to know which questions are dependent upon answers from previous ones
		<UL>
			<LI>business logic dependencies - e.g. should this be asked
			<LI>presentation logic dependencies - e.g. customization of question
		</UL>
		<LI>Syntax for grouping related questions
		<LI>Does tree adequately model this? (can contents of branches be randomized?)
	</UL>
	<LI>Support non-linear traversal of interview
	<UL>
		<LI>Robust forward and backward that obeys conditional branchign
		<LI>Jump-to arbitrary section or question, when not disallowed (e.g. within a guideline)
		<LI>JTree view of questions (by short description) for rapid jumping to sections
		<LI>Topic search for applicable questions?
	</UL>
	<LI>Results summarization
	<UL>
		<LI>output to variety of data formats for off-line analysis (e.g. via XML)
		<LI>internal support for reports generation (e.g. via Cocoon SQL and XSL stylesheets)
		<LI>modular support for more complex queries and reports (e.g. via IDs which point to linked modules)
		<LI>JTree visualization of completed questions, dependencies, and answers?
	</UL>
	<LI>Support for easy authoring
	<LI>Portable knowledge encoding and representation?
	<UL>
		<LI>Link questions and answers to coding schema
		<UL>
			<LI>MED/UMLS concepts?
			<LI>Protege 2000 ontology builder?
		</UL>
		<LI>Support for forward &amp; backwards chaining?
	</UL>
	<LI>Speed
	<UL>
		<LI>relational database design to access features
		<LI>optimized transformations and renderers 
	</UL>
</UL>

<P ALIGN="CENTER"><B>Implementation Model</B></P>
<P>Assumptions

<UL>
	<LI>A node encapsulates a single concept, action, and data storage location (evidence)
	<UL>
		<LI>One-to-one relationship between an action and a datum
		<LI>Action types
		<UL>
			<LI>question -&gt; answer
			<LI>database lookup -&gt; single datum
			<LI>evaluation of expression whose single result is stored in storage location
		</UL>
		<LI>Data types
		<UL>
			<LI>number
			<LI>text
			<LI>date/time
		</UL>
	</UL>
	<LI>Nodes contain one of the following values:
	<UL>
		<LI>*unknown* (starting value)
		<LI>*not applicable* (if dependencies dictate that this nodes does not need to be evaluated)
		<LI>datum value
	</UL>
	<LI>Conditional branching is implemented by linearly traversing the vector of nodes
	<UL>
		<LI>each node has a dependency field which determines whether its action should be processed
		<LI>nodes can be grouped using tree model (no current support for multiple parents)
		<LI>simple, loop-less boolean logic used to specify dependencies
	</UL>
	<LI>Potential problems
	<UL>
		<LI>one-to-many relationships
		<UL>
			<LI>multi-select of a list of choices
			<LI>looping 
		</UL>
		<LI>database lookup of a vector (return multiple values)
		<LI>complex data types &amp; operator overloading
	</UL>
</UL>

<P>Enumerations</P>

<UL>
	<LI>Input data types
	<UL>
		<LI>number
		<UL>
			<LI>valid ranges?
		</UL>
		<LI>text
		<LI>memo
		<LI>date/time
		<UL>
			<LI>valid range?
		</UL>
		<LI>enumeration
		<UL>
			<LI>pick one
			<LI>pick many [violates one-to-one relationship of assumptoins]
			<LI>(what data storage type? - number, text, either?)
		</UL>
	</UL>
	<LI>Input styles
	<UL>
		<LI>text box
		<UL>
			<LI>formatted
		</UL>
		<LI>memo field
		<LI>number
		<UL>
			<LI>input mask
			<LI>slider?
		</UL>
		<LI>date/time
		<UL>
			<LI>input mask
		</UL>
		<LI>enumeration
		<UL>
			<LI>pick one (e.g. radio buttons, combo box)
			<LI>pick many (e.g. check boxes, multi-pick list)
		</UL>
	</UL>
	<LI>Question Attributes
	<UL>
		<LI>concept (multiple heirachy levels - e.g. BPRS.Motor)
		<LI>topic (e.g. Mannerisms &amp; Posturing)
		<LI>instructions
		<UL>
			<LI>what to do
			<UL>
				<LI>goal
				<LI>what to ask
				<LI>what to observe
			</UL>
			<LI>what to measure
			<UL>
				<LI>inclusion criteria
				<LI>exclusion criteria
			</UL>
			<LI>context specific help (e.g. audio/video of <I>loose associations</I>)
			<LI>links to literature?
			<LI>links to related symptoms/signs/concepts, or those which might appear similar
		</UL>
		<LI>question text (part of instructions? or separate?)
		<LI>answer choices
		<UL>
			<LI>list, or link to named, pre-defined list
			<LI>special (reserved) values?
			<UL>
				<LI>not applicable
				<LI>not assessed (e.g. deferred)
				<LI>patient doesn't know
				<LI>patient refuses to answer
			</UL>
		</UL>
	</UL>
	<LI>Answer Choices (for each)
	<UL>
		<LI>text
		<UL>
			<LI>brief description - e.g. <I>moderately-severe</I>
			<LI>full description (anchor) - explaining, or linking to meaning
		</UL>
		<LI>context sensitive help (e.g. link to audio/video)
		<LI>internally stored value
		<LI>externally presented value?
		<LI>concept reference?
	</UL>
	<LI>Action Types
	<UL>
		<LI>ask
		<UL>
			<LI>patient
			<LI>clinician (same difference? - can instruct to observe, rather than ask)
		</UL>
		<LI>evaluate
		<UL>
			<LI>process and expression, and store the results
			<LI>support background store &amp; retrieve?
		</UL>
		<LI>loop? [how &amp; where should looping syntax be specified?]
		<LI>suspend/resume?
		<LI>external action
		<UL>
			<LI>order test, transfer patient
			<LI>send alert
			<LI>(e.g. Arden-type actions)
		</UL>
		<LI>manage (administrative issues)
		<LI>spawn (explicit parallelism?)
	</UL>
</UL>


</BODY>

</HTML>
